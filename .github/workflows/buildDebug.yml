name: Kmplate-lib build

on:
  workflow_call:
  workflow_dispatch:

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: iosSimulatorArm64Test
            os: macos-latest
          - target: testReleaseUnitTest
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: "zulu"

      - name: Setup Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}

      - name: Build with Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: ${{ matrix.target }}

  notify:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Send notification on Slack
        uses: rtCamp/action-slack-notify@v2.2.0
        if: ${{ success() }}
        env:
          SLACK_CHANNEL: ${{ vars.SLACK_GITHUB_ACTIONS_CHANNEL_NAME }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: ${{ vars.SLACK_GITHUB_ACTIONS_ICON_URL }}
          SLACK_MESSAGE: ':white_check_mark: Build successful! :rocket:'
          SLACK_TITLE: Kmplate-lib build status
          SLACK_USERNAME: Github Actions CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send notification on Slack
        uses: rtCamp/action-slack-notify@v2.2.0
        if: ${{ failure() }}
        env:
          SLACK_CHANNEL: ${{ vars.SLACK_GITHUB_ACTIONS_CHANNEL_NAME }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: ${{ vars.SLACK_GITHUB_ACTIONS_ICON_URL }}
          SLACK_MESSAGE: ':x: Build failed! :pensive:'
          SLACK_TITLE: Kmplate-lib build status
          SLACK_USERNAME: Github Actions CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
